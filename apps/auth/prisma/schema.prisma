generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/auth-client"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "foreignKeys"
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  emailVerified Boolean  @default(false)
  name          String?
  image         String?
  password      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  sessions Session[]

  @@map("user")
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model OutboxEvent {
  id            String            @id @default(cuid())
  aggregateId   String
  aggregateType String
  eventType     String
  eventData     Json
  eventVersion  Int               @default(1)
  occurredAt    DateTime
  processedAt   DateTime?
  publishedAt   DateTime?
  retryCount    Int               @default(0)
  lastError     String?
  status        OutboxEventStatus @default(PENDING)
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt

  @@index([status, createdAt])
  @@index([aggregateId, aggregateType])
  @@map("outbox_event")
}

enum OutboxEventStatus {
  PENDING
  PROCESSING
  PUBLISHED
  FAILED
  DEAD_LETTER
}
